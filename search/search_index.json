{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Warning</p> <p>Site still in developing... Please wait</p>"},{"location":"guidelines/coding-style/","title":"Coding style","text":"<p>Consistent code style is good practice to keep code more readable across whole project, that makes it more readable and makes it easier to collaborate within a development team or contributors.</p>"},{"location":"guidelines/coding-style/#language-guidelines","title":"Language guidelines","text":"<ul> <li>Prefer modern features and constructions than older ones.</li> <li>Use latest language version (whenever it possible).</li> <li>Use language keywords for data types instead of them full name:<ul> <li><code>u32</code> but not <code>std::numerics::UInt32</code> nor <code>UInt32</code>.</li> </ul> </li> </ul>"},{"location":"guidelines/coding-style/#prefer-fast-boolean-operators","title":"Prefer fast boolean operators","text":"<ul> <li>Use fast <code>&amp;&amp;</code> and <code>||</code> boolean operators instead of <code>&amp;</code> and <code>|</code> operators.</li> </ul>"},{"location":"guidelines/coding-style/#style-prefer","title":"Style prefer","text":"<ul> <li>Use K&amp;R style for braces.</li> <li>Prefer tabulation than spaces.<ul> <li>If spaces is used: use 4 spaces for indentation.</li> <li>Store prefered indentation style to <code>.editorconfig</code> file of your project. (see example)</li> </ul> </li> <li>Do not make too long lines.</li> </ul>"},{"location":"guidelines/coding-style/#use-directive-order","title":"Use directive order","text":"<ul> <li>Sort <code>use</code> statements from less nested to most.</li> </ul> PreferDo not prefer <pre><code>use std;\nuse std::numerics;\nuse other_lib;\nuse other_lib::extra;\nuse other_lib::extra::download;\nuse other_lib::extra::import;\n</code></pre> <pre><code>use std::numerics;\nuse std;\nuse other_lib::extra::download;\nuse other_lib::extra::import;\nuse other_lib::extra;\nuse other_lib;\n</code></pre> <ul> <li>Don't interrupt using sequence.</li> </ul> PreferDo not prefer <pre><code>use other_lib;\nuse other_lib::extra::download;\nuse other_lib::extra::import;\nuse other_lib::extra;\nuse other_lib::modern;\n</code></pre> <pre><code>use other_lib;\nuse other_lib::extra::download;\nuse other_lib::modern;\nuse other_lib::extra::import;\nuse other_lib::extra;\n</code></pre>"},{"location":"guidelines/coding-style/#place-module-after-use-statements","title":"Place module after use statements","text":"<p>Highly recommended to place module declaration right after use statements with one empty line before the declaration.</p> PreferDo not prefer <pre><code>use std;\n\nmodule sigma_lib;\n\n...\n</code></pre> <pre><code>module sigma_lib;\n\nuse std;\n\n...\n</code></pre>"},{"location":"guidelines/coding-style/#comments-style","title":"Comments style","text":"<ul> <li>Use single-line comments (<code>//</code>) for brief explanations.</li> <li>Place comments before the explanation part, not at the end of the line.</li> <li>Begin comment with uppercase letter.</li> <li>Insert one space between <code>//</code> and the comment text.</li> </ul>"},{"location":"guidelines/naming-guideline/","title":"Naming guidelines","text":"<p>Warning</p> <p>Site still in developing... Please wait</p>"},{"location":"runtime/access/","title":"Accessibility levels","text":"Access modifier Description <code>public</code> Access isn't restricted. <code>friend</code> Access is limited to the current library or types derived from the containing type. <code>protected</code> Access is limited to container or types derived from containing type. <code>internal</code> Access is limited to the current library. <code>family</code> Access is limited to the container or types derived from the containing type within the current library. <code>private</code> Access is limited to the container. <p>Member always can be accessed from the same container scope. This cannot be changed.</p> <p>If no access modifier is presented in a member declaration, <code>private</code> modifier is used.</p> <p>Warning</p> <p>Modifiers <code>protected</code>, <code>friend</code>, <code>family</code> are not valid on members inside modules or sealed types.</p>"},{"location":"runtime/inheritance/","title":"Inheritance","text":""},{"location":"runtime/inheritance/#type-sealing","title":"Type sealing","text":"<p>Warning</p> <p>Site still in developing... Please wait</p>"},{"location":"runtime/bytecode/add/","title":"<code>add</code> instruction","text":""},{"location":"runtime/bytecode/break/","title":"<code>break</code> instruction","text":"<p>Signals the NLR to inform debugger that a break point is been reached</p> Property Value Code <code>0x01</code> Assembly <code>break</code> Size 1"},{"location":"runtime/bytecode/nope/","title":"<code>nope</code> instruction","text":"<p>Does nothing</p> Property Value Code <code>0x00</code> Assembly <code>nope</code> Size 1"},{"location":"runtime/bytecode/push/","title":"<code>push</code> instructions","text":"<p>Push instructions are pushing values onto stack for future using</p>"},{"location":"runtime/bytecode/push/#push-arguments","title":"Push arguments","text":"Property Value Code <code>0x02</code> Assembly <code>push arg &lt;name: literal&gt;</code><code>push arg &lt;index: u16&gt;</code> Description Push argument value onto stack Size 3 Property Value Code <code>0x03</code> Assembly <code>push &amp;arg &lt;name: literal&gt;</code><code>push &amp;arg &lt;index: u16&gt;</code> Description Push argument reference onto stack Size 3"},{"location":"runtime/bytecode/push/#push-locals","title":"Push locals","text":"Property Value Code <code>0x05</code> Assembly <code>push local &lt;name: literal&gt;</code><code>push local &lt;index: u16&gt;</code> Description Push local variable value onto stack Size 3 Property Value Code <code>0x06</code> Assembly <code>push &amp;local &lt;name: literal&gt;</code><code>push &amp;local &lt;index: u16&gt;</code> Description Push local variable reference onto stack Size 3"},{"location":"runtime/bytecode/push/#push-numerics","title":"Push numerics","text":"i8i16i32i64u8u16u32u64f32f64 Property Value Code <code>0x10</code> Assembly <code>push &lt;value: i8&gt;</code> Description Push 8-bit integer onto stack Size 2 Property Value Code <code>0x11</code> Assembly <code>push &lt;value: i16&gt;</code> Description Push 16-bit integer onto stack Size 3 Property Value Code <code>0x12</code> Assembly <code>push &lt;value: i32&gt;</code> Description Push 32-bit integer onto stack Size 5 Property Value Code <code>0x13</code> Assembly <code>push &lt;value: i64&gt;</code> Description Push 64-bit integer onto stack Size 9 Property Value Code <code>0x14</code> Assembly <code>push &lt;value: u8&gt;</code> Description Push 8-bit unsigned integer onto stack Size 2 Property Value Code <code>0x15</code> Assembly <code>push &lt;value: u16&gt;</code> Description Push 16-bit unsigned integer onto stack Size 3 Property Value Code <code>0x16</code> Assembly <code>push &lt;value: u32&gt;</code> Description Push 32-bit unsigned integer onto stack Size 5 Property Value Code <code>0x17</code> Assembly <code>push &lt;value: u64&gt;</code> Description Push 64-bit unsigned integer onto stack Size 9 Property Value Code <code>0x18</code> Assembly <code>push &lt;value: f32&gt;</code> Description Push float integer onto stack Size 5 Property Value Code <code>0x19</code> Assembly <code>push &lt;value: f64&gt;</code> Description Push double float integer onto stack Size 9"},{"location":"runtime/bytecode/push/#push-null","title":"Push null","text":"Property Value Code <code>0x1B</code> Assembly <code>push null</code> Description Push null onto stack Size 1"},{"location":"runtime/bytecode/store/","title":"<code>store</code> instructions","text":"<p>Warning</p> <p>Site still in developing... Please wait</p>"}]}